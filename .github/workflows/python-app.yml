# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install flask_restful
        pip install pandas
        pip install flask_cors
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        export PYTHONPATH=src
        pytest
        
  container:
    
    runs-on: ubuntu-latest
    
    steps:     
      #- name: Login to GHCR
      #  uses: docker/login-action@v1
      #  with:
      #    registry: ghcr.io
          #username: CatIsOutOfTheBag
          #password: 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
      #    username: ${{ github.repository_owner }}
      #    password: ${{ GitHub_TOKEN }}
      
      - name: PAT
        run: |
          export CR_PAT=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
          echo $CR_PAT | docker login ghcr.io -u CatIsOutOfTheBag â€“password-stdin
          
      - name: Build image
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.docker_meta.outputs.tags }} 
          file: ./Dockerfile
          
      - name: Monitor image for vulnerabilities with Snyk
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK }}
        with:
          command: monitor
          image: "ghcr.io/CatIsOutOfTheBag/rgapi:main"
          args: --file=Dockerfile --project-name=rgapi 
          
      - name: Push image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          file: ./Dockerfile




    
